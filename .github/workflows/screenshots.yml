name: Screenshots

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review

jobs:
  screenshots:
    name: Regenerate
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: ${{ !github.event.pull_request.draft }}
    strategy:
      fail-fast: false
      matrix:
        imgui_dep: ["imgui", ""]
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install llvmpipe and lavapipe for offscreen canvas
        run: |
          sudo apt-get update -y -qq
          sudo apt-get install --no-install-recommends -y ffmpeg libegl1-mesa-dev libgl1-mesa-dri libxcb-xfixes0-dev mesa-vulkan-drivers
      - name: Install dev dependencies
        run: |
          python -m pip install --upgrade pip setuptools
          # remove pygfx from install_requires, we install using pygfx@main
          sed -i "/pygfx/d" ./setup.py
          pip install git+https://github.com/pygfx/pygfx.git@main
      - name: Install fastplotlib
        run: |
          # create string with one of: tests,imgui,notebook; test,imgui; test,notebook ; tests
          # sed removes trailing comma
          # install fastplotlib with with or without imgui depending on build matrix
          pip install -e ".[$(echo "tests,notebook,${{ matrix.imgui_dep }}" | sed -e "s/,\+/,/g" -e "s/,$//")]"
      - name: Show wgpu backend
        run:
          python -c "from examples.tests.testutils import wgpu_backend; print(wgpu_backend)"
      - name: Generate screenshots
        env:
          PYGFX_EXPECT_LAVAPIPE: true
        run: |
          # regenerate screenshots
          WGPU_FORCE_OFFSCREEN=1 REGENERATE_SCREENSHOTS=1 pytest -v examples
      - name: Generate screenshots notebook
        if: ${{ matrix.notebook_dep == 'notebook' && matrix.imgui_dep == 'imgui' }}
        env:
          PYGFX_EXPECT_LAVAPIPE: true
        run: FASTPLOTLIB_NB_TESTS=1 REGENERATE_SCREENSHOTS=1 pytest --nbmake examples/notebooks/
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: screenshots-${{ matrix.imgui_dep }}
          path: |
            examples/screenshots/
            examples/notebooks/screenshots/
