name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review

jobs:
  test-build-full:
    name: Tests
    timeout-minutes: 25
    if: ${{ !github.event.pull_request.draft }}
    strategy:
      fail-fast: false
      matrix:
        python: ["3.11", "3.12", "3.13"]
        imgui_dep: ["imgui", ""]
        notebook_dep: ["notebook", ""]
        pygfx_version: ["pygfx-release", "pygfx-main"]
        os: ["ubuntu-latest", "macos-latest"]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
      with:
        lfs: true
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python }}
    - name: Install llvmpipe and lavapipe for offscreen canvas
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: |
        sudo apt-get update -y -qq
        sudo apt-get install --no-install-recommends -y ffmpeg libegl1-mesa-dev libgl1-mesa-dri libxcb-xfixes0-dev mesa-vulkan-drivers xorg-dev
        run: echo "PYGFX_EXPECT_LAVAPIPE=true" >> "$GITHUB_ENV"
    - name: Set up Homebrew
      if: ${{ matrix.os == 'macos-latest' }}
      id: set-up-homebrew
      uses: Homebrew/actions/setup-homebrew@master
    - name: Install gsed
      if: ${{ matrix.os == 'macos-latest' }}
      run: |
        brew install gnu-sed
        echo "/opt/homebrew/opt/gnu-sed/libexec/gnubin" >> "$GITHUB_PATH"
        run: echo "PYGFX_EXPECT_LAVAPIPE=false" >> "$GITHUB_ENV"
    - name: Install pygx from main
      if: ${{ matrix.pygfx_version == 'pygfx-main' }}
      run: |
        python -m pip install --upgrade pip setuptools
        # remove pygfx from install_requires, we install using pygfx@main
        sed -i "/pygfx/d" ./setup.py
        pip install git+https://github.com/pygfx/pygfx.git@main
    - name: Install fastplotlib
      run: |
        # create string with one of: tests,imgui,notebook; test,imgui; test,notebook ; tests
        # sed removes trailing comma
        # install fastplotlib with given extras options from above
        pip install -e ".[$(echo "tests,${{ matrix.imgui_dep }},${{ matrix.notebook_dep }}" | sed -e "s/,\+/,/g" -e "s/,$//")]"
    - name: Show wgpu backend
      run:
        python -c "from examples.tests.testutils import wgpu_backend; print(wgpu_backend)"
    - name: Test components
      env:
        PYGFX_EXPECT_LAVAPIPE: ${{ env.PYGFX_EXPECT_LAVAPIPE }}
      run: |
        WGPU_FORCE_OFFSCREEN=1 pytest -v tests/
    - name: Test examples
      env:
        PYGFX_EXPECT_LAVAPIPE: ${{ env.PYGFX_EXPECT_LAVAPIPE }}
      run: |
        WGPU_FORCE_OFFSCREEN=1 pytest -v examples/
    - name: Test examples notebooks, exclude ImageWidget notebook
      if: ${{ matrix.notebook_dep == 'notebook' }}
      env:
        PYGFX_EXPECT_LAVAPIPE: ${{ env.PYGFX_EXPECT_LAVAPIPE }}
      # test notebooks, exclude ImageWidget notebooks
      run: FASTPLOTLIB_NB_TESTS=1 pytest --nbmake $(find ./examples/notebooks/ -maxdepth 1 -type f -name "*.ipynb" ! -name "image_widget*.ipynb" -print | xargs)
    - name: Test ImageWidget notebooks
      # test image widget notebooks only if imgui is installed
      if: ${{ matrix.notebook_dep == 'notebook' && matrix.imgui_dep == 'imgui' }}
      env:
        PYGFX_EXPECT_LAVAPIPE: ${{ env.PYGFX_EXPECT_LAVAPIPE }}
      run: FASTPLOTLIB_NB_TESTS=1 pytest --nbmake $(find ./examples/notebooks/ -maxdepth 1 -type f -name "image_widget*.ipynb" -print | xargs)
    - uses: actions/upload-artifact@v4
      if: ${{ failure() }}
      with:
        name: screenshot-diffs-${{ matrix.pyversion }}-${{ matrix.imgui_dep }}-${{ matrix.notebook_dep }}
        path: |
          examples/diffs
          examples/notebooks/diffs
