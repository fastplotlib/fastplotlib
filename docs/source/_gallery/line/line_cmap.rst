
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "_gallery/line/line_cmap.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download__gallery_line_line_cmap.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr__gallery_line_line_cmap.py:


Line Plot Colormap
==================

Example showing basic colormapping with lines

.. GENERATED FROM PYTHON SOURCE LINES 7-49



.. image-sg:: /_gallery/line/images/sphx_glr_line_cmap_001.webp
   :alt: line cmap
   :srcset: /_gallery/line/images/sphx_glr_line_cmap_001.webp
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /home/uutzinger/Build/fastplotlib/fastplotlib/graphics/features/_base.py:18: UserWarning: casting float64 array to float32
      warn(f"casting {array.dtype} array to float32")







|

.. code-block:: Python


    # test_example = true

    import fastplotlib as fpl
    import numpy as np

    figure = fpl.Figure(size=(700, 560))

    xs = np.linspace(-10, 10, 100)
    # sine wave
    ys = np.sin(xs)
    sine = np.dstack([xs, ys])[0]

    # cosine wave
    ys = np.cos(xs) - 5
    cosine = np.dstack([xs, ys])[0]

    # cmap_transform from an array, so the colors on the sine line will be based on the sine y-values
    sine_graphic = figure[0, 0].add_line(
        data=sine,
        thickness=10,
        cmap="plasma",
        cmap_transform=sine[:, 1]
    )

    # qualitative colormaps, useful for cluster labels or other types of categorical labels
    labels = [0] * 25 + [5] * 10 + [1] * 35 + [2] * 30
    cosine_graphic = figure[0, 0].add_line(
        data=cosine,
        thickness=10,
        cmap="tab10",
        cmap_transform=labels
    )

    figure.show()


    # NOTE: `if __name__ == "__main__"` is NOT how to use fastplotlib interactively
    # please see our docs for using fastplotlib interactively in ipython and jupyter
    if __name__ == "__main__":
        print(__doc__)
        fpl.loop.run()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.230 seconds)


.. _sphx_glr_download__gallery_line_line_cmap.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: line_cmap.ipynb <line_cmap.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: line_cmap.py <line_cmap.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: line_cmap.zip <line_cmap.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
