
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "_gallery/line/line.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download__gallery_line_line.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr__gallery_line_line.py:


Simple Line Plot
================

Example showing cosine, sine, sinc lines.

.. GENERATED FROM PYTHON SOURCE LINES 7-47



.. image-sg:: /_gallery/line/images/sphx_glr_line_001.webp
   :alt: line
   :srcset: /_gallery/line/images/sphx_glr_line_001.webp
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /home/uutzinger/Build/fastplotlib/fastplotlib/graphics/features/_base.py:18: UserWarning: casting float64 array to float32
      warn(f"casting {array.dtype} array to float32")







|

.. code-block:: Python


    # test_example = true

    import fastplotlib as fpl
    import numpy as np

    figure = fpl.Figure(size=(700, 560))

    xs = np.linspace(-10, 10, 100)
    # sine wave
    ys = np.sin(xs)
    sine = np.dstack([xs, ys])[0]

    # cosine wave
    ys = np.cos(xs) + 5
    cosine = np.dstack([xs, ys])[0]

    # sinc function
    a = 0.5
    ys = np.sinc(xs) * 3 + 8
    sinc = np.dstack([xs, ys])[0]

    sine_graphic = figure[0, 0].add_line(data=sine, thickness=5, colors="magenta")

    # you can also use colormaps for lines!
    cosine_graphic = figure[0, 0].add_line(data=cosine, thickness=12, cmap="autumn")

    # or a list of colors for each datapoint
    colors = ["r"] * 25 + ["purple"] * 25 + ["y"] * 25 + ["b"] * 25
    sinc_graphic = figure[0, 0].add_line(data=sinc, thickness=5, colors=colors)

    figure[0, 0].axes.grids.xy.visible = True
    figure.show()


    # NOTE: `if __name__ == "__main__"` is NOT how to use fastplotlib interactively
    # please see our docs for using fastplotlib interactively in ipython and jupyter
    if __name__ == "__main__":
        print(__doc__)
        fpl.loop.run()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.282 seconds)


.. _sphx_glr_download__gallery_line_line.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: line.ipynb <line.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: line.py <line.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: line.zip <line.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
