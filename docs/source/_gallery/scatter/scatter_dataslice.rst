
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "_gallery/scatter/scatter_dataslice.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download__gallery_scatter_scatter_dataslice.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr__gallery_scatter_scatter_dataslice.py:


Scatter Plot Data Slicing
=========================

Example showing data slice for scatter plot.

.. GENERATED FROM PYTHON SOURCE LINES 7-39



.. image-sg:: /_gallery/scatter/images/sphx_glr_scatter_dataslice_001.webp
   :alt: scatter dataslice
   :srcset: /_gallery/scatter/images/sphx_glr_scatter_dataslice_001.webp
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /home/uutzinger/Build/fastplotlib/fastplotlib/graphics/features/_base.py:18: UserWarning: casting float64 array to float32
      warn(f"casting {array.dtype} array to float32")







|

.. code-block:: Python


    # test_example = false

    import fastplotlib as fpl
    import numpy as np


    figure = fpl.Figure(size=(700, 560))

    # create a gaussian cloud of 5_000 points
    n_points = 1_000

    mean = [0, 0]  # mean of the Gaussian distribution
    covariance = [[1, 0], [0, 1]]  # covariance matrix

    gaussian_cloud = np.random.multivariate_normal(mean, covariance, n_points)
    gaussian_cloud2 = np.random.multivariate_normal(mean, covariance, n_points)

    # use an alpha value since this will be a lot of points
    scatter1 = figure[0,0].add_scatter(data=gaussian_cloud, sizes=3)
    scatter2 = figure[0,0].add_scatter(data=gaussian_cloud2, colors="r", sizes=3)

    figure.show()

    scatter1.data[:500] = np.array([0 , 0, 0])
    scatter2.data[500:] = np.array([0 , 0, 0])

    # NOTE: `if __name__ == "__main__"` is NOT how to use fastplotlib interactively
    # please see our docs for using fastplotlib interactively in ipython and jupyter
    if __name__ == "__main__":
        print(__doc__)
        fpl.loop.run()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.116 seconds)


.. _sphx_glr_download__gallery_scatter_scatter_dataslice.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: scatter_dataslice.ipynb <scatter_dataslice.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: scatter_dataslice.py <scatter_dataslice.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: scatter_dataslice.zip <scatter_dataslice.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
