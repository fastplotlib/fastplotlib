
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "_gallery/scatter/scatter_colorslice.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download__gallery_scatter_scatter_colorslice.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr__gallery_scatter_scatter_colorslice.py:


Scatter Plot Color Slicing
==========================

Example showing color slice for scatter plot.

.. GENERATED FROM PYTHON SOURCE LINES 7-53



.. image-sg:: /_gallery/scatter/images/sphx_glr_scatter_colorslice_001.webp
   :alt: scatter colorslice
   :srcset: /_gallery/scatter/images/sphx_glr_scatter_colorslice_001.webp
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /home/uutzinger/Build/fastplotlib/fastplotlib/graphics/features/_base.py:18: UserWarning: casting float64 array to float32
      warn(f"casting {array.dtype} array to float32")







|

.. code-block:: Python


    # test_example = false

    import fastplotlib as fpl
    import numpy as np

    figure = fpl.Figure(size=(700, 560))

    # create a random distribution of 10,000 xyz coordinates
    n_points = 5_000

    # dimensions always have to be [n_points, xyz]
    dims = (n_points, 3)

    clouds_offset = 30

    # create some random clouds
    normal = np.random.normal(size=dims, scale=5)
    # stack the data into a single array
    cloud = np.vstack(
        [
            normal - clouds_offset,
            normal,
            normal + clouds_offset,
        ]
    )

    # color each of them separately
    colors = ["yellow"] * n_points + ["cyan"] * n_points + ["magenta"] * n_points

    # use an alpha value since this will be a lot of points
    figure[0, 0].add_scatter(data=cloud, sizes=3, colors=colors, alpha=0.6)

    figure.show()

    scatter_graphic = figure[0, 0].graphics[0]

    scatter_graphic.colors[0:75] = "red"
    scatter_graphic.colors[75:150] = "white"
    scatter_graphic.colors[::2] = "blue"

    # NOTE: `if __name__ == "__main__"` is NOT how to use fastplotlib interactively
    # please see our docs for using fastplotlib interactively in ipython and jupyter
    if __name__ == "__main__":
        print(__doc__)
        fpl.loop.run()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.308 seconds)


.. _sphx_glr_download__gallery_scatter_scatter_colorslice.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: scatter_colorslice.ipynb <scatter_colorslice.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: scatter_colorslice.py <scatter_colorslice.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: scatter_colorslice.zip <scatter_colorslice.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
