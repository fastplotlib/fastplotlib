
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "_gallery/line_collection/line_collection.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download__gallery_line_collection_line_collection.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr__gallery_line_collection_line_collection.py:


Line Collection Simple
======================

Example showing how to plot line collections

.. GENERATED FROM PYTHON SOURCE LINES 7-46



.. image-sg:: /_gallery/line_collection/images/sphx_glr_line_collection_001.webp
   :alt: line collection
   :srcset: /_gallery/line_collection/images/sphx_glr_line_collection_001.webp
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /home/uutzinger/Build/fastplotlib/fastplotlib/graphics/features/_base.py:18: UserWarning: casting float64 array to float32
      warn(f"casting {array.dtype} array to float32")







|

.. code-block:: Python


    # test_example = true

    from itertools import product
    import numpy as np
    import fastplotlib as fpl


    def make_circle(center, radius: float, n_points: int = 75) -> np.ndarray:
        theta = np.linspace(0, 2 * np.pi, n_points)
        xs = radius * np.sin(theta)
        ys = radius * np.cos(theta)

        return np.column_stack([xs, ys]) + center


    spatial_dims = (100, 100)

    circles = list()
    for center in product(range(0, spatial_dims[0], 15), range(0, spatial_dims[1], 15)):
        circles.append(make_circle(center, 5, n_points=75))

    pos_xy = np.vstack(circles)

    figure = fpl.Figure(size=(700, 560))

    figure[0, 0].add_line_collection(circles, cmap="jet", thickness=5)

    # remove clutter
    figure[0, 0].axes.visible = False

    figure.show()


    # NOTE: `if __name__ == "__main__"` is NOT how to use fastplotlib interactively
    # please see our docs for using fastplotlib interactively in ipython and jupyter
    if __name__ == "__main__":
        print(__doc__)
        fpl.loop.run()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.383 seconds)


.. _sphx_glr_download__gallery_line_collection_line_collection.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: line_collection.ipynb <line_collection.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: line_collection.py <line_collection.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: line_collection.zip <line_collection.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
